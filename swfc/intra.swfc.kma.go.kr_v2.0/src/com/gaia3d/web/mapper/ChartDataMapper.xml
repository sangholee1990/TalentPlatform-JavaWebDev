<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gaia3d.web.mapper.ChartDataMapper">
	<resultMap type="hashmap" id="indicator">
		<result property="data_type" column="DATA_TYPE" javaType="string"/>
		<result property="value" column="IDX" javaType="integer"/>
	</resultMap>
	<sql id="1HourDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '1' HOUR STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>
	
	<sql id="3HourDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '3' HOUR STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>
	
	<sql id="1MinuteDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '1' MINUTE STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>	
	
	<sql id="5MinuteDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '5' MINUTE STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>
	
	<sql id="10MinuteDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '10' MINUTE STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>	
		
	<select id="SelectManyAceEpam" parameterType="hashmap" resultType="SWPCAceEpam">
	<![CDATA[
		SELECT * FROM TB_ACE_EPAM
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>
	</select>
	
	<select id="SelectManyAceSis" parameterType="hashmap" resultType="SWPCAceSis">
	<![CDATA[
		SELECT * FROM TB_ACE_SIS
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyAceSwepam" parameterType="hashmap" resultType="SWPCAceSwepam">
	<![CDATA[
		SELECT * FROM TB_ACE_SWEPAM
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaHet" parameterType="hashmap" resultType="SWPCHet">
	<![CDATA[
		SELECT * FROM TB_STA_HET
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaImpact" parameterType="hashmap" resultType="SWPCImpact">
	<![CDATA[
		SELECT * FROM TB_STA_IMPACT
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaMag" parameterType="hashmap" resultType="SWPCMag">
	<![CDATA[
		SELECT * FROM TB_STA_MAG
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaPlastic" parameterType="hashmap" resultType="SWPCPlastic">
	<![CDATA[
		SELECT * FROM TB_STA_PLASTIC
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbHet" parameterType="hashmap" resultType="SWPCHet">
	<![CDATA[
		SELECT * FROM TB_STB_HET
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbImpact" parameterType="hashmap" resultType="SWPCImpact">
	<![CDATA[
		SELECT * FROM TB_STB_IMPACT
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbMag" parameterType="hashmap" resultType="SWPCMag">
	<![CDATA[
		SELECT * FROM TB_STB_MAG
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbPlastic" parameterType="hashmap" resultType="SWPCPlastic">
	<![CDATA[
		SELECT * FROM TB_STB_PLASTIC
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>

	<select id="SelectManyGoesProtonFlux" parameterType="hashmap" resultType="SWPCGoesProtonFlux">
		SELECT
			TM,
			NULLIF(P1, -100000) P1,
			NULLIF(P5, -100000) P5,
			NULLIF(P10, -100000) P10,
			NULLIF(P30, -100000) P30,
			NULLIF(P50, -100000) P50,
			NULLIF(P100, -100000) P100
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN TB_GOES_PARTICLE_P USING(TM)
	</select>

	<select id="SelectManyGoesElectronFluxSWAA" parameterType="hashmap" resultType="SWAAGoesElectronFlux">
		SELECT TM, 
			NULLIF(ELECTRON_FLUX_40KEV, -100000) E_40keV
		FROM
		(<include refid="5MinuteDateRange"/>) 
		LEFT JOIN
		( SELECT REG_TIME AS TM, ELECTRON_FLUX_40KEV FROM SWAA_GOES_13_PARTICLE_T ) USING(TM)
		ORDER BY TM
	</select>
	
	<select id="SelectManyGoesElectronFluxSWAA2" parameterType="hashmap" resultType="SWAAGoesElectronFlux2">
		SELECT TM, E20_24H E_2MeV
		FROM
		(<include refid="5MinuteDateRange"/>) 
		LEFT JOIN
		( SELECT * FROM SWAA_GOES_13_PARTICLE_24H_T ) USING(TM)
		ORDER BY TM
	</select>
	
	<select id="SelectManyGoesMagSWAA" parameterType="hashmap" resultType="SWAAGoesMag">
		SELECT TM, 
			SMT_GOES_MAG_P_T.HP GOES13_HP, SMT_GOES_MAG_P_T.HE P_HE, SMT_GOES_MAG_P_T.HN P_HN, SMT_GOES_MAG_P_T.TOTAL_FLD P_T_FLD,
  			SMT_GOES_MAG_S_T.HP GOES15_HP, SMT_GOES_MAG_S_T.HE S_HE, SMT_GOES_MAG_S_T.HN S_HN, SMT_GOES_MAG_S_T.TOTAL_FLD S_T_FLD FROM
		(<include refid="5MinuteDateRange"/>) 
		LEFT JOIN SMT_GOES_MAG_P_T USING(TM)
		LEFT JOIN SMT_GOES_MAG_S_T USING(TM)
	</select>
	
	<select id="SelectManyGoesElectronFlux" parameterType="hashmap" resultType="SWPCGoesElectronFlux">
		SELECT
			TM,
			NULLIF(E8, -100000) E8,
			NULLIF(E20, -100000) E20,
			NULLIF(E40, -100000) E40
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN TB_GOES_PARTICLE_P USING(TM)
	</select>
	
	<select id="SelectManyGoesElectronFluxAll" parameterType="hashmap" resultType="SWPCGoesElectronFluxAll">
		SELECT
			TM,
			NULLIF(GOES13_E8, -100000) GOES13_E8,
			NULLIF(GOES13_E20, -100000) GOES13_E20,
			NULLIF(GOES13_E40, -100000) GOES13_E40,
	      	NULLIF(GOES15_E8, -100000) GOES15_E8,
			NULLIF(GOES15_E20, -100000) GOES15_E20,
			NULLIF(GOES15_E40, -100000) GOES15_E40
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN (
			SELECT
				GOES13.TM AS TM,
				GOES13.E8  AS GOES13_E8,
				GOES13.E20 AS GOES13_E20,
				GOES13.E40 AS GOES13_E40,
		      	GOES15.E8  AS GOES15_E8,
				GOES15.E20 AS GOES15_E20,
				GOES15.E40 AS GOES15_E40
			FROM TB_GOES_PARTICLE_P GOES13 LEFT JOIN TB_GOES_PARTICLE_S GOES15 ON GOES13.TM = GOES15.TM
		) USING(TM)
	</select>
	
	
	<select id="SelectManyGoesParticleS" parameterType="hashmap" resultType="SWPCGoesParticle">
	<![CDATA[
		SELECT * FROM TB_GOES_PARTICLE_S
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>	
		
	
	<select id="SelectManyGoesXray1M" parameterType="hashmap" resultType="SWPCGoesXray1M">
		SELECT
			TM,
			NULLIF(SHORT_FLUX, -100000) SHORT_FLUX,
			NULLIF(LONG_FLUX, -100000) LONG_FLUX
		FROM (<include refid="1MinuteDateRange"/>) LEFT JOIN TB_GOES_XRAY_1M USING(TM)			
	</select>	
	
	<select id="SelectManyGoesXray5M" parameterType="hashmap" resultType="SWPCGoesXray5M">
		SELECT
			TM,
			NULLIF(SHORT_FLUX, -100000) SHORT_FLUX,
			NULLIF(LONG_FLUX, -100000) LONG_FLUX,
			NULLIF(RATIO, -100000) RATIO
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN TB_GOES_XRAY_5M USING(TM)	
	</select>	

	<select id="SelectManyKpIndexSwpc" parameterType="hashmap" resultType="SimpleIntegerValueChartData">
		SELECT 
			TM, 
			KP AS VALUE 
		FROM (<include refid="3HourDateRange"/>) LEFT JOIN TB_KP_INDEX USING(TM)
	</select>
	
	<select id="SelectManyKpIndexKhu" parameterType="hashmap" resultType="KpIndexDTO">
		SELECT * 
		FROM 
		(SELECT TM,	KP AS SWPC FROM (<include refid="3HourDateRange"/>) LEFT JOIN TB_KP_INDEX USING(TM))
		FULL OUTER JOIN
		<![CDATA[ 
		(SELECT TM,	KP AS KHU FROM TB_KP_INDEX_KHU WHERE TM >= #{startDate} AND TM < #{endDate})
		]]>
		USING (TM)
		ORDER BY TM
	</select>
	
	
	<select id="SelectManyDstIndexKyoto" parameterType="hashmap" resultType="SimpleIntegerValueChartData">
		SELECT 
			TM,
			DST AS VALUE 
		FROM (<include refid="1HourDateRange"/>) LEFT JOIN TB_DST_INDEX USING(TM)
	</select>
	
	<select id="SelectManyDstKhuIndex" parameterType="hashmap" resultType="DstIndexDTO">
		SELECT 
			TM,
			TB_DST_INDEX.DST AS KYOTO,
			TB_DST_INDEX_KHU.DST AS KHU
		FROM (<include refid="1HourDateRange"/>) 
		LEFT JOIN TB_DST_INDEX USING(TM)
		LEFT JOIN TB_DST_INDEX_KHU USING(TM)
	</select>
	
	<select id="SelectManyAceMag" parameterType="hashmap" resultType="SWPCAceMag">
		SELECT 
			DATE_RANGE.TM,
			NULLIF("BX", -999.9) AS "BX", 
			NULLIF("BY", -999.9) AS "BY",
			NULLIF("BZ", -999.9) AS "BZ",
			NULLIF("BT", -999.9) AS "BT"
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN TB_ACE_MAG ON(DATE_RANGE.TM=TB_ACE_MAG.TM AND TB_ACE_MAG.S!=9)
	</select>
	
	<select id="SelectManyAceSolarWindDensity" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			DATE_RANGE.TM, 
			NULLIF(PRO_DENS, -9999.9) AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN TB_ACE_SWEPAM ON(DATE_RANGE.TM=TB_ACE_SWEPAM.TM AND TB_ACE_SWEPAM.S!=9)
	</select>
	
	<select id="SelectManyAceSolarWindSpeed" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			DATE_RANGE.TM, 
			NULLIF(BULK_SPD, -9999.9) AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN TB_ACE_SWEPAM ON(DATE_RANGE.TM=TB_ACE_SWEPAM.TM AND TB_ACE_SWEPAM.S!=9) 
	</select>
	
	<select id="SelectManyAceSolarWindTemperature" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			DATE_RANGE.TM, 
			NULLIF(ION_TEMP, -100000) AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN TB_ACE_SWEPAM ON(DATE_RANGE.TM=TB_ACE_SWEPAM.TM AND TB_ACE_SWEPAM.S!=9)
	</select>

	<select id="SelectManyMagnetopauseRadius" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			TM, 
			RADIUS AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) LEFT JOIN TB_MAGNETOPAUSE_RADIUS USING(TM)
	</select>
	
	<select id="SelectManySolarMaximum" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM, 
			FILEPATH AS VALUE 
		FROM TB_SOLAR_MAXIMUM
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectOneSolarMaximum" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM, 
			FILEPATH AS VALUE 
		FROM TB_SOLAR_MAXIMUM
		WHERE TM = #{tm}
	]]>		
	</select>

	<select id="SelectManyTEC" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM,
			SYS.UTL_ENCODE.TEXT_ENCODE(FILEPATH, NULL, 1) VALUE 
		FROM TB_TEC
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectOneTEC" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM, 
			SYS.UTL_ENCODE.TEXT_ENCODE(FILEPATH, NULL, 1) VALUE
		FROM TB_TEC
		WHERE TM = #{tm}
	]]>		
	</select>
	
	<select id="SelectRecentSummary" resultType="ChartSummaryDTO">
		WITH TM_RANGE AS (SELECT TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 3/24,'YYYYMMDDHH24MISS') SD, TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),'YYYYMMDDHH24MISS') ED FROM DUAL)
		  SELECT 'XRAY' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'NOW', TM, VAL  FROM (SELECT TM, P5 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'NOW', TM, VAL FROM (SELECT TM, KP VAL FROM TB_KP_INDEX, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'NOW', TM, VAL FROM (SELECT TM, RADIUS VAL FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
	</select>
	
	<select id="SelectMaxSummaryForEachDay" resultType="ChartSummaryDTO">
	<![CDATA[
		WITH TM_RANGE AS (
      	SELECT TO_CHAR(#{startDate} - 9/24,'YYYYMMDDHH24MISS') SD,	TO_CHAR((#{endDate} - 9/24 )+1, 'YYYYMMDDHH24MISS') ED FROM DUAL)
      	SELECT * 
      	FROM (
	      	SELECT 'XRAY' DATATYPE, 'D1' DURATION, TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, LONG_FLUX VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY LONG_FLUX DESC) RANK FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
	      	UNION ALL
	      	SELECT 'PROTON', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, P5 VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY P5 DESC) RANK FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
	      	UNION ALL
	      	SELECT 'KP', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, KP VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY KP DESC) RANK FROM TB_KP_INDEX, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
			UNION ALL
	      	SELECT 'MP', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, RADIUS VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY RADIUS) RANK FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
    	) ORDER BY DATATYPE, TM ASC
    ]]>
	</select>
	<select id="SelectMaxSummaryForEachDayNewxxx" resultType="ChartSummaryDTO">
	<![CDATA[
		WITH TM_RANGE AS (
      	SELECT 
      		TO_CHAR(CAST(SYS_EXTRACT_UTC(TO_TIMESTAMP(#{searchDate}, 'YYYY-MM-DD HH24:MI:SS')) AS DATE) - 2, 'YYYYMMDDHH24MISS') SD
           ,TO_CHAR(CAST(SYS_EXTRACT_UTC(TO_TIMESTAMP(#{searchDate}, 'YYYY-MM-DD HH24:MI:SS')) AS DATE) + 1, 'YYYYMMDDHH24MISS') ED 
        FROM DUAL)
      	SELECT * 
      	FROM (
	      	SELECT 'XRAY' DATATYPE, 'D1' DURATION, TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, LONG_FLUX VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY LONG_FLUX DESC) RANK FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
	      	UNION ALL
	      	SELECT 'PROTON', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, P5 VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY P5 DESC) RANK FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
	      	UNION ALL
	      	SELECT 'KP', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, KP VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY KP DESC) RANK FROM TB_KP_INDEX, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
			UNION ALL
	      	SELECT 'MP', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, RADIUS VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY RADIUS) RANK FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
    	) ORDER BY DATATYPE, TM ASC
    ]]>
	</select>
	
	<!-- UTC로 시간을 가져와 kst로 변경한다.  -->
	<select id="SelectMaxSummaryForEachDayNew" resultType="ChartSummaryDTO">
	<![CDATA[
		WITH TM_RANGE AS (
	      	SELECT
	      		TO_CHAR(CAST(SYS_EXTRACT_UTC(TO_TIMESTAMP(#{searchDate}, 'YYYY-MM-DD HH24:MI:SS')) AS DATE) - 4, 'YYYYMMDDHH24MISS') SD
	           ,TO_CHAR(CAST(SYS_EXTRACT_UTC(TO_TIMESTAMP(#{searchDate}, 'YYYY-MM-DD HH24:MI:SS')) AS DATE), 'YYYYMMDDHH24MISS') ED
	        FROM DUAL)
      		SELECT * FROM (
	      		SELECT 'XRAY' DATATYPE, 'D1' DURATION, TM, VAL FROM (
	      			SELECT TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') AS TM, LONG_FLUX VAL, RANK() OVER (PARTITION BY TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') ORDER BY LONG_FLUX DESC) RANK 
				    FROM TB_GOES_XRAY_1M, TM_RANGE 
				    WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) 
				WHERE RANK=1 
				GROUP BY TM, VAL     
				UNION ALL     
				SELECT 'PROTON', 'D1', TM, VAL FROM (
					SELECT TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') AS TM, P5 VAL, RANK() OVER (PARTITION BY TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') ORDER BY P5 DESC) RANK 
				    FROM TB_GOES_PARTICLE_P, TM_RANGE 
				    WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) 
				WHERE RANK=1 
				GROUP BY TM, VAL     
				UNION ALL 
				SELECT 'KP', 'D1', TM, VAL FROM (
					SELECT TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') AS TM, KP VAL, RANK() OVER (PARTITION BY TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') ORDER BY KP DESC) RANK 
				    FROM TB_KP_INDEX, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) 
				WHERE RANK=1 
				GROUP BY TM, VAL     
				UNION ALL 
				SELECT 'MP', 'D1', TM, VAL FROM (
					SELECT TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') AS TM, RADIUS VAL, RANK() OVER (PARTITION BY TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDD') ORDER BY RADIUS) RANK 
				    FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE 
				    WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) 
				WHERE RANK=1 GROUP BY TM, VAL 
	    )     
	    ORDER BY DATATYPE, TM ASC 
    ]]>
	</select>
	
	<select id="SelectSummary" resultType="ChartSummaryDTO">
	<![CDATA[
		WITH TM_RANGE AS (
      SELECT 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 3/24,'YYYYMMDDHH24MISS') SD3H, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 6/24,'YYYYMMDDHH24MISS') SD6H, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 1,'YYYYMMDDHH24MISS') SD1D, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 3,'YYYYMMDDHH24MISS') SD3D, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),'YYYYMMDDHH24MISS') ED FROM DUAL)
          SELECT 'ELECTRON_FLUX_20_13' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_20_13', 'H3', TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_20_13', 'D1', TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_20_13', 'D3', TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
          UNION ALL
          SELECT 'ELECTRON_FLUX_20_15' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_S, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_20_15', 'H3', TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_S, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_20_15', 'D1', TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_S, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_20_15', 'D3', TM, VAL FROM (SELECT TM, E20 VAL FROM TB_GOES_PARTICLE_S, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
          UNION ALL
          SELECT 'ELECTRON_FLUX_40_13' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_13_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY REG_TIME DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_40_13', 'H3', TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_13_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_40_13', 'D1', TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_13_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_40_13', 'D3', TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_13_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
          UNION ALL
          SELECT 'ELECTRON_FLUX_40_15' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_15_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY REG_TIME DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_40_15', 'H3', TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_15_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_40_15', 'D1', TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_15_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
	      UNION ALL
	      SELECT 'ELECTRON_FLUX_40_15', 'D3', TM, VAL FROM (SELECT REG_TIME TM, ELECTRON_FLUX_40KEV VAL FROM SWAA_GOES_15_PARTICLE_T, TM_RANGE WHERE REG_TIME BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY', 'H3', TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY', 'D1', TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY', 'D3', TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM TB_GOES_XRAY_1M, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'NOW', TM, VAL  FROM (SELECT TM, P5 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'H3', TM, VAL  FROM (SELECT TM, P5 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'D1', TM, VAL  FROM (SELECT TM, P5 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'D3', TM, VAL  FROM (SELECT TM, P5 VAL FROM TB_GOES_PARTICLE_P, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'NOW', TM, VAL FROM (SELECT TM, KP VAL FROM TB_KP_INDEX, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'H6', TM, VAL FROM (SELECT TM, KP VAL FROM TB_KP_INDEX, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD6H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'H3', TM, VAL FROM (SELECT TM, KP VAL FROM TB_KP_INDEX, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'D1', TM, VAL FROM (SELECT TM, KP VAL FROM TB_KP_INDEX, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'D3', TM, VAL FROM (SELECT TM, KP VAL FROM TB_KP_INDEX, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'NOW', TM, VAL FROM (SELECT TM, RADIUS VAL FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'H3', TM, VAL FROM (SELECT TM, RADIUS VAL FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'D1', TM, VAL FROM (SELECT TM, RADIUS VAL FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'D3', TM, VAL FROM (SELECT TM, RADIUS VAL FROM TB_MAGNETOPAUSE_RADIUS, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL) WHERE ROWNUM = 1
	]]>
	</select>
	
	<select id="selectDailyMaxValues" parameterType="hashmap" resultType="hashmap">
		WITH tm_range AS (
		 SELECT 
		 	 TO_CHAR(((TO_DATE(#{publish_dt} || #{publish_hour} || #{publish_min} || '00' , 'YYYYMMDDHH24MISS') - 9/24) - 1), 'YYYYMMDDHH24MISS') sd 
		  	,TO_CHAR((TO_DATE(#{publish_dt} || #{publish_hour} || #{publish_min} || '00', 'YYYYMMDDHH24MISS') - 9/24), 'YYYYMMDDHH24MISS') ed
		  	,TO_CHAR(((TO_DATE(#{publish_dt} || #{publish_hour} || #{publish_min} || '00' , 'YYYYMMDDHH24MISS') - 6/24) - 1), 'YYYYMMDDHH24MISS') sd_kp 
		  	,TO_CHAR((TO_DATE(#{publish_dt} || #{publish_hour} || #{publish_min} || '00', 'YYYYMMDDHH24MISS') - 6/24), 'YYYYMMDDHH24MISS') ed_kp 
		 FROM dual )
		<![CDATA[
		SELECT 'XRAY' AS nm, tm, TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, long_flux AS val,
			CASE 
			  WHEN POWER(10, -8) <= long_flux AND long_flux < POWER(10, -7) THEN 'A'
			  WHEN POWER(10, -7) <= long_flux AND long_flux < POWER(10, -6) THEN 'B'
			  WHEN POWER(10, -6) <= long_flux AND long_flux < POWER(10, -5) THEN 'C'
			  WHEN POWER(10, -5) <= long_flux AND long_flux < POWER(10, -4) THEN 'M'
			  WHEN POWER(10, -4) <= long_flux AND long_flux < POWER(10, -3) THEN 'X'
			  WHEN POWER(10, -4) > long_flux THEN 'A'
			  WHEN POWER(10, -8) < long_flux THEN 'X'
			  END AS grade
			  ,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt
			  ,TRUNC(LOG(10, long_flux), 0) AS A
			  ,CASE
		          WHEN long_flux >= 0.002 THEN 5
		          WHEN long_flux >= 0.001 THEN 4
		          WHEN long_flux >= 0.0001 THEN 3
		          WHEN long_flux >= 0.00005 THEN 2
		          WHEN long_flux >= 0.00001 THEN 1
		          ELSE 0
		        END AS B
		FROM ( SELECT * FROM TB_GOES_XRAY_1M , tm_range  WHERE long_flux != -100000 AND tm BETWEEN tm_range.sd AND tm_range.ed ORDER BY long_flux DESC ) WHERE ROWNUM = 1
		UNION ALL
		SELECT 'PROTON' as nm, tm, TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, p10 AS val, to_char( ROUND(LOG(10, p10), 0 ) ) as grade,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt, TRUNC(LOG(10, p10), 0) AS A  
			,CASE
	          WHEN p10 >= 100000 THEN 5
	          WHEN p10 >= 10000 THEN 4
	          WHEN p10 >= 1000 THEN 3
	          WHEN p10 >= 100 THEN 2
	          WHEN p10 >= 10 THEN 1
	          ELSE 0
	        END AS B
		FROM ( SELECT * FROM TB_GOES_PARTICLE_P , tm_range  WHERE p10 != -100000 AND tm BETWEEN tm_range.sd AND tm_range.ed ORDER BY p10 DESC ) WHERE ROWNUM = 1
		UNION ALL
		SELECT 'KP' AS nm, tm, TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, kp AS val,to_char(  kp ) as grade,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt, 0 AS A 
		,CASE
          WHEN kp >= 9 THEN 5
          WHEN kp >= 8 THEN 4
          WHEN kp >= 7 THEN 3
          WHEN kp >= 6 THEN 2
          WHEN kp >= 5 THEN 1
          ELSE 0
        END AS B
		FROM ( SELECT * FROM TB_KP_INDEX , tm_range  WHERE TM BETWEEN tm_range.sd_kp AND tm_range.ed_kp ORDER BY kp DESC ) WHERE ROWNUM = 1
		UNION ALL
		SELECT 'GEOMAG' AS nm, tm, TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, radius AS val,to_char(  radius ) as grade,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt, 0 AS A 
		,CASE
          WHEN radius >= 10.6 THEN 0
          WHEN radius >= 8.6 THEN 1
          WHEN radius >= 6.6 THEN 2
          WHEN radius >= 5.6 THEN 3
          WHEN radius >= 4.6 THEN 4
          ELSE 5
        END AS B
		FROM (select * from TB_MAGNETOPAUSE_RADIUS, tm_range  WHERE TM BETWEEN tm_range.sd AND tm_range.ed ORDER BY radius ASC ) WHERE ROWNUM = 1
		UNION ALL
		SELECT DATA_TYPE, TM, TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, ROUND(val, 2) AS val, grade  
	    ,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt
	    ,NULL AS A
	    ,NULL AS B
	    FROM (
			  SELECT '10MeV' AS DATA_TYPE, tm, p10 AS VAL, NULL AS grade from TB_GOES_PARTICLE_P, tm_range WHERE tm BETWEEN tm_range.sd and tm_range.ed ORDER BY p10 DESC
			) WHERE ROWNUM = 1
			UNION ALL
			SELECT data_type, tm, TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, ROUND(val, 2) AS val, grade  
	    ,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt
			,NULL AS A
			,NULL AS B
	    FROM (
			  SELECT '2MeV' AS DATA_TYPE, tm,  e20 AS VAL, NULL AS grade from TB_GOES_PARTICLE_P, tm_range WHERE tm BETWEEN tm_range.sd and tm_range.ed ORDER BY e20 DESC
			) WHERE ROWNUM = 1
			UNION ALL
			SELECT data_type, tm, TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, ROUND(val, 2) AS val, grade  
	    ,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt
			,NULL AS A
	    	,NULL AS B
	    FROM (
			  SELECT 'bz' AS DATA_TYPE, tm, bz AS VAL, NULL AS grade from TB_ACE_MAG, tm_range WHERE tm BETWEEN tm_range.sd and tm_range.ed AND bz != -999.9 ORDER BY bz ASC
			) WHERE ROWNUM = 1
			UNION ALL
			SELECT data_type, tm, TO_CHAR(TO_DATE(TM, 'YYYYMMDDHH24MISS') + 9/24, 'YYYYMMDDHH24MISS') as kst, ROUND(VAL, 2) AS val, grade  
	    ,TO_CHAR(TO_DATE(tm, 'YYYYMMDDHH24MISS'), 'MM.DD HH24:MI') AS display_dt
	    ,NULL AS A
	    ,NULL AS B
	    FROM (
			  SELECT 'bulk_spd' AS DATA_TYPE, tm,  bulk_spd AS VAL, NULL AS grade FROM TB_ACE_SWEPAM, tm_range WHERE tm BETWEEN tm_range.sd and tm_range.ed AND bulk_spd != -9999.9 ORDER BY bulk_spd DESC
			) WHERE ROWNUM = 1
		]]>
	</select>
	
</mapper>