<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.rte.swfc.mapper.ChartDataMapper">
	<resultMap type="hashmap" id="indicator">
		<result property="data_type" column="DATA_TYPE" javaType="string"/>
		<result property="value" column="IDX" javaType="integer"/>
	</resultMap>
	<sql id="1HourDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '1' HOUR STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>
	
	<sql id="3HourDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '3' HOUR STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>
	
	<sql id="1MinuteDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '1' MINUTE STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>	
	
	<sql id="5MinuteDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '5' MINUTE STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>
	
	<sql id="10MinuteDateRange">
	<![CDATA[
		WITH DATE_INFO AS (
		  SELECT 
		      FIRST_DATE,
		      LAST_DATE,
		      BEGIN_DATE,
		      END_DATE,
		      STEP,
		      (EXTRACT(DAY FROM BEGIN_END_INTERVAL) * 86400 + EXTRACT(HOUR FROM BEGIN_END_INTERVAL) * 3600 + EXTRACT(MINUTE FROM BEGIN_END_INTERVAL) * 60 + EXTRACT(SECOND FROM BEGIN_END_INTERVAL)) / STEP_TO_SECONDS  + 1 CNT
		  FROM (
		    SELECT 
		        FIRST_DATE,
		        LAST_DATE,
		        BEGIN_DATE,
		        END_DATE,
		        STEP_TO_SECONDS,
		        STEP,
		        NUMTODSINTERVAL(END_DATE-BEGIN_DATE, 'DAY') BEGIN_END_INTERVAL
		      FROM (
		      SELECT
		        FIRST_DATE,
		        LAST_DATE,
		        FIRST_DATE + NUMTODSINTERVAL(DECODE(FIRST_INTERVAL_SECONDS, 0, 0, STEP_TO_SECONDS - FIRST_INTERVAL_SECONDS ), 'SECOND') BEGIN_DATE,
		        LAST_DATE - NUMTODSINTERVAL(LAST_INTERVAL_SECOND, 'SECOND') END_DATE,
		        STEP_TO_SECONDS,
		        STEP
		        FROM (
		      SELECT 
		        BASE.*,
		        MOD(EXTRACT(DAY FROM FIRST_INTERVAL) * 86400 + EXTRACT(HOUR FROM FIRST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM FIRST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) FIRST_INTERVAL_SECONDS,
		        MOD(EXTRACT(DAY FROM LAST_INTERVAL) * 86400 + EXTRACT(HOUR FROM LAST_INTERVAL) * 3600 + EXTRACT(MINUTE FROM LAST_INTERVAL) * 60 + EXTRACT(SECOND FROM LAST_INTERVAL), STEP_TO_SECONDS) LAST_INTERVAL_SECOND
		        FROM (
		          SELECT
		            BASE.*,
		            NUMTODSINTERVAL(FIRST_DATE - TRUNC(FIRST_DATE), 'DAY') FIRST_INTERVAL,
		            NUMTODSINTERVAL(LAST_DATE - TRUNC(LAST_DATE), 'DAY') LAST_INTERVAL,
		            EXTRACT( DAY FROM STEP) * 86400 + EXTRACT( HOUR FROM STEP) *  3600 + EXTRACT( MINUTE FROM STEP) * 60 + EXTRACT( SECOND FROM STEP) STEP_TO_SECONDS
		            FROM (SELECT TO_DATE(#{startDate}, 'YYYYMMDDHH24MISS') FIRST_DATE, TO_DATE(#{endDate}, 'YYYYMMDDHH24MISS') LAST_DATE, INTERVAL '10' MINUTE STEP FROM DUAL) BASE
		        ) BASE
		      )
		    )
		  )
		)
		SELECT TO_CHAR(FIRST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE FIRST_DATE != BEGIN_DATE
		UNION ALL
		SELECT TO_CHAR(BEGIN_DATE + STEP * (LEVEL-1), 'YYYYMMDDHH24MISS') TM FROM DATE_INFO CONNECT BY LEVEL <= CNT 
		UNION ALL
		SELECT TO_CHAR(LAST_DATE, 'YYYYMMDDHH24MISS') TM FROM DATE_INFO WHERE LAST_DATE != END_DATE
	]]>
	</sql>	
		
	<select id="SelectManyAceEpam" parameterType="hashmap" resultType="SWPCAceEpam">
	<![CDATA[
		SELECT * FROM TB_ACE_EPAM
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>
	</select>
	
	<select id="SelectManyAceSis" parameterType="hashmap" resultType="SWPCAceSis">
	<![CDATA[
		SELECT * FROM TB_ACE_SIS
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyAceSwepam" parameterType="hashmap" resultType="SWPCAceSwepam">
	<![CDATA[
		SELECT * FROM SMT_ACE_SWEPAM_T
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaHet" parameterType="hashmap" resultType="SWPCHet">
	<![CDATA[
		SELECT * FROM TB_STA_HET
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaImpact" parameterType="hashmap" resultType="SWPCImpact">
	<![CDATA[
		SELECT * FROM TB_STA_IMPACT
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaMag" parameterType="hashmap" resultType="SWPCMag">
	<![CDATA[
		SELECT * FROM TB_STA_MAG
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStaPlastic" parameterType="hashmap" resultType="SWPCPlastic">
	<![CDATA[
		SELECT * FROM TB_STA_PLASTIC
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbHet" parameterType="hashmap" resultType="SWPCHet">
	<![CDATA[
		SELECT * FROM TB_STB_HET
		WHERE TM >= #{startDate} AND TM < #{endDate} 
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbImpact" parameterType="hashmap" resultType="SWPCImpact">
	<![CDATA[
		SELECT * FROM TB_STB_IMPACT
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbMag" parameterType="hashmap" resultType="SWPCMag">
	<![CDATA[
		SELECT * FROM TB_STB_MAG
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectManyStbPlastic" parameterType="hashmap" resultType="SWPCPlastic">
	<![CDATA[
		SELECT * FROM TB_STB_PLASTIC
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>

	<select id="SelectManyGoesProtonFlux" parameterType="hashmap" resultType="SWPCGoesProtonFlux">
		SELECT
			TM,
			NULLIF(P1, -100000) P1,
			NULLIF(P5, -100000) P5,
			NULLIF(P10, -100000) P10,
			NULLIF(P30, -100000) P30,
			NULLIF(P50, -100000) P50,
			NULLIF(P100, -100000) P100
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN SMT_GOES_PARTICLE_P_T USING(TM)
	</select>
	
	<select id="SelectManyGoesElectronFlux" parameterType="hashmap" resultType="SWPCGoesElectronFlux">
		SELECT
			TM,
			NULLIF(E8, -100000) E8,
			NULLIF(E20, -100000) E20,
			NULLIF(E40, -100000) E40
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN SMT_GOES_PARTICLE_P_T USING(TM)
	</select>
	
	
	<select id="SelectManyGoesParticleS" parameterType="hashmap" resultType="SWPCGoesParticle">
	<![CDATA[
		SELECT * FROM SMT_GOES_PARTICLE_S_T
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>	
		
	
	<select id="SelectManyGoesXray1M" parameterType="hashmap" resultType="SWPCGoesXray1M">
		SELECT
			TM,
			NULLIF(SHORT_FLUX, -100000) SHORT_FLUX,
			NULLIF(LONG_FLUX, -100000) LONG_FLUX
		FROM (<include refid="1MinuteDateRange"/>) LEFT JOIN SMT_GOES_XRAY_1M_T USING(TM)			
	</select>	
	
	<select id="SelectManyGoesXray5M" parameterType="hashmap" resultType="SWPCGoesXray5M">
		SELECT
			TM,
			NULLIF(SHORT_FLUX, -100000) SHORT_FLUX,
			NULLIF(LONG_FLUX, -100000) LONG_FLUX,
			NULLIF(RATIO, -100000) RATIO
		FROM (<include refid="5MinuteDateRange"/>) LEFT JOIN SMT_GOES_XRAY_5M_T USING(TM)	
	</select>	

	<select id="SelectManyKpIndexSwpc" parameterType="hashmap" resultType="SimpleIntegerValueChartData">
		SELECT 
			TM, 
			KP AS VALUE 
		FROM (<include refid="3HourDateRange"/>) LEFT JOIN SMT_KP_INDEX_T USING(TM)
	</select>
	
	<select id="SelectManyKpIndexKhu" parameterType="hashmap" resultType="KpIndexDTO">
		SELECT * 
		FROM 
		(SELECT TM,	KP AS SWPC FROM (<include refid="3HourDateRange"/>) LEFT JOIN SMT_KP_INDEX_T USING(TM))
		FULL OUTER JOIN
		<![CDATA[ 
		(SELECT TM,	KP AS KHU FROM SMT_KP_INDEX_KHU_T WHERE TM >= #{startDate} AND TM < #{endDate})
		]]>
		USING (TM)
		ORDER BY TM
	</select>
	
	
	<select id="SelectManyDstIndexKyoto" parameterType="hashmap" resultType="SimpleIntegerValueChartData">
		SELECT 
			TM,
			DST AS VALUE 
		FROM (<include refid="1HourDateRange"/>) LEFT JOIN SMT_DST_INDEX_T USING(TM)
	</select>
	
	<select id="SelectManyDstKhuIndex" parameterType="hashmap" resultType="DstIndexDTO">
		SELECT 
			TM,
			SMT_DST_INDEX_T.DST AS KYOTO,
			SMT_DST_INDEX_KHU_T.DST AS KHU
		FROM (<include refid="1HourDateRange"/>) 
		LEFT JOIN SMT_DST_INDEX_T USING(TM)
		LEFT JOIN SMT_DST_INDEX_KHU_T USING(TM)
	</select>
	
	<select id="SelectManyAceMag" parameterType="hashmap" resultType="SWPCAceMag">
		SELECT 
			DATE_RANGE.TM,
			NULLIF(BX, -999.9) AS "BX", 
			NULLIF(B_Y, -999.9) AS "BY",
			NULLIF(BZ, -999.9) AS "BZ",
			NULLIF(BT, -999.9) AS "BT"
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN SMT_ACE_MAG_T ON(DATE_RANGE.TM=SMT_ACE_MAG_T.TM AND SMT_ACE_MAG_T.S!=9)
	</select>
	
	<select id="SelectManyAceSolarWindDensity" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			DATE_RANGE.TM, 
			NULLIF(PRO_DENS, -9999.9) AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN SMT_ACE_SWEPAM_T ON(DATE_RANGE.TM=SMT_ACE_SWEPAM_T.TM AND SMT_ACE_SWEPAM_T.S!=9)
	</select>
	
	<select id="SelectManyAceSolarWindSpeed" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			DATE_RANGE.TM, 
			NULLIF(BULK_SPD, -9999.9) AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN SMT_ACE_SWEPAM_T ON(DATE_RANGE.TM=SMT_ACE_SWEPAM_T.TM AND SMT_ACE_SWEPAM_T.S!=9) 
	</select>
	
	<select id="SelectManyAceSolarWindTemperature" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			DATE_RANGE.TM, 
			NULLIF(ION_TEMP, -100000) AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) DATE_RANGE LEFT JOIN SMT_ACE_SWEPAM_T ON(DATE_RANGE.TM=SMT_ACE_SWEPAM_T.TM AND SMT_ACE_SWEPAM_T.S!=9)
	</select>

	<select id="SelectManyMagnetopauseRadius" parameterType="hashmap" resultType="SimpleDoubleValueChartData">
		SELECT 
			TM, 
			RADIUS AS VALUE 
		FROM (<include refid="1MinuteDateRange"/>) LEFT JOIN SMT_MAGNETOPAUSE_RADIUS_T USING(TM)
	</select>
	
	<select id="SelectManySolarMaximum" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM, 
			FILEPATH AS VALUE 
		FROM SMT_SOLAR_MAXIMUM_T
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectOneSolarMaximum" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM, 
			FILEPATH AS VALUE 
		FROM SMT_SOLAR_MAXIMUM_T
		WHERE TM = #{tm}
	]]>		
	</select>

	<select id="SelectManyTEC" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM,
			SYS.UTL_ENCODE.TEXT_ENCODE(FILEPATH, NULL, 1) VALUE 
		FROM TB_TEC
		WHERE TM >= #{startDate} AND TM < #{endDate}
		ORDER BY TM
	]]>		
	</select>
	
	<select id="SelectOneTEC" parameterType="hashmap" resultType="SimpleStringValueChartData">
	<![CDATA[
		SELECT 
			TM, 
			SYS.UTL_ENCODE.TEXT_ENCODE(FILEPATH, NULL, 1) VALUE
		FROM TB_TEC
		WHERE TM = #{tm}
	]]>		
	</select>
	
	<select id="SelectRecentSummary" resultType="ChartSummaryDTO">
		WITH TM_RANGE AS (SELECT TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 3/24,'YYYYMMDDHH24MISS') SD, TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),'YYYYMMDDHH24MISS') ED FROM DUAL)
		  SELECT 'XRAY' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM SMT_GOES_XRAY_1M_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'NOW', TM, VAL  FROM (SELECT TM, P5 VAL FROM SMT__GOES_PARTICLE_P_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'NOW', TM, VAL FROM (SELECT TM, KP VAL FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'NOW', TM, VAL FROM (SELECT TM, RADIUS VAL FROM SMT_MAGNETOPAUSE_RADIUS_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
	</select>
	
	<select id="SelectMaxSummaryForEachDay" resultType="ChartSummaryDTO">
	<![CDATA[
		WITH TM_RANGE AS (
      	SELECT TO_CHAR(#{startDate},'YYYYMMDDHH24MISS') SD,	TO_CHAR(#{endDate}+1, 'YYYYMMDDHH24MISS') ED FROM DUAL)
      	SELECT 'XRAY' DATATYPE, 'D1' DURATION, TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, LONG_FLUX VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY LONG_FLUX DESC) RANK FROM SMT_GOES_XRAY_1M_T, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
      	UNION ALL
      	SELECT 'PROTON', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, P5 VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY P5 DESC) RANK FROM SMT__GOES_PARTICLE_P_T, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
      	UNION ALL
      	SELECT 'KP', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, KP VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY KP DESC) RANK FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
		UNION ALL
      	SELECT 'MP', 'D1', TM, VAL FROM (SELECT SUBSTR(TM,1,8) TM, RADIUS VAL, RANK() OVER (PARTITION BY SUBSTR(TM,1,8) ORDER BY RADIUS) RANK FROM SMT_MAGNETOPAUSE_RADIUS_T, TM_RANGE WHERE TM >= TM_RANGE.SD AND TM < TM_RANGE.ED) WHERE RANK=1 GROUP BY TM, VAL
    ]]>
	</select>
	
	<select id="SelectSummary" resultType="ChartSummaryDTO">
	<![CDATA[
		WITH TM_RANGE AS (
      SELECT
      	TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 6/24,'YYYYMMDDHH24MISS') SD6H, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 3/24,'YYYYMMDDHH24MISS') SD3H, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 1,'YYYYMMDDHH24MISS') SD1D, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE) - 3,'YYYYMMDDHH24MISS') SD3D, 
        TO_CHAR(CAST(SYS_EXTRACT_UTC(SYSTIMESTAMP) AS DATE),'YYYYMMDDHH24MISS') ED FROM DUAL)
		  SELECT 'XRAY' DATATYPE, 'NOW' DURATION, TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM SMT_GOES_XRAY_1M_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY', 'H3', TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM SMT_GOES_XRAY_1M_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY', 'D1', TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM SMT_GOES_XRAY_1M_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'XRAY', 'D3', TM, VAL FROM (SELECT TM, LONG_FLUX VAL FROM SMT_GOES_XRAY_1M_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'NOW', TM, VAL  FROM (SELECT TM, P5 VAL FROM SMT_GOES_PARTICLE_P_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'H3', TM, VAL  FROM (SELECT TM, P5 VAL FROM SMT_GOES_PARTICLE_P_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'D1', TM, VAL  FROM (SELECT TM, P5 VAL FROM SMT_GOES_PARTICLE_P_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'PROTON', 'D3', TM, VAL  FROM (SELECT TM, P5 VAL FROM SMT_GOES_PARTICLE_P_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'NOW', TM, VAL FROM (SELECT TM, KP VAL FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
  		  SELECT 'KP', 'H6', TM, VAL FROM (SELECT TM, KP VAL FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD6H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'H3', TM, VAL FROM (SELECT TM, KP VAL FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'D1', TM, VAL FROM (SELECT TM, KP VAL FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'KP', 'D3', TM, VAL FROM (SELECT TM, KP VAL FROM SMT_KP_INDEX_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'NOW', TM, VAL FROM (SELECT TM, RADIUS VAL FROM SMT_MAGNETOPAUSE_RADIUS_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY TM DESC) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'H3', TM, VAL FROM (SELECT TM, RADIUS VAL FROM SMT_MAGNETOPAUSE_RADIUS_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3H AND TM_RANGE.ED ORDER BY VAL) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'D1', TM, VAL FROM (SELECT TM, RADIUS VAL FROM SMT_MAGNETOPAUSE_RADIUS_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD1D AND TM_RANGE.ED ORDER BY VAL) WHERE ROWNUM = 1
		  UNION ALL
		  SELECT 'MP', 'D3', TM, VAL FROM (SELECT TM, RADIUS VAL FROM SMT_MAGNETOPAUSE_RADIUS_T, TM_RANGE WHERE TM BETWEEN TM_RANGE.SD3D AND TM_RANGE.ED ORDER BY VAL) WHERE ROWNUM = 1
	]]>
	</select>
</mapper>